<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <title>Hello React!</title>
    <script src="https://npmcdn.com/react@15.3.1/dist/react.js"></script>
    <script src="https://npmcdn.com/react-dom@15.3.1/dist/react-dom.js"></script>
    <script src="https://npmcdn.com/babel-core@5.8.38/browser.min.js"></script>
    <script src="https://npmcdn.com/jquery@3.1.0/dist/jquery.min.js"></script>
    <script src="https://npmcdn.com/remarkable@1.6.2/dist/remarkable.min.js"></script>
    
</head>

<body>
    <div id="example"></div>
    <div id="content"></div>
    <div id="avatar"></div>
    <script type="text/babel">
        // tutorial8.js
        var data = [
            {id: 1, author: "Pete Hunt", text: "This is one comment"},
            {id: 2, author: "Jordan Walke", text: "This is *another* comment"}
        ];

        var Comment = React.createClass({
            render: function() {
                return (
                    <div className="comment">
                        <h2 className="commentAuthor">
                            {this.props.author}
                        </h2>
                        {this.props.children}
                    </div>
                );
            }
        });
        
        var CommentList = React.createClass({
            render: function() {
                var commentNodes = this.props.data.map(function(comment) {
                    return (
                        <Comment author={comment.author} key={comment.id}>
                            {comment.text}
                        </Comment>
                    );
                });
                return (
                    <div className="commentList">
                        {commentNodes}
                    </div>
                );
            }
        });

        var CommentForm = React.createClass({
            getInitialState: function() {
                return {author: '', text: ''};
            },
            handleAuthorChange: function(e) {
                this.setState({author: e.target.value});
            },
            handleTextChange: function(e) {
                this.setState({text: e.target.value});
            },
            handleSubmit: function(e) {
                e.preventDefault();
                var author = this.state.author.trim();
                var text = this.state.text.trim();

                if(!text || !author) {
                    return;
                }

                this.setState({author: '', text: ''});
            },
            render: function() {
                return (
                    <form className="commentForm" onSubmit={this.handleSubmit}>
                        <input
                            type="text"
                            placeholder="Your name"
                            value={this.state.author}
                            onChange={this.handleAuthorChange}
                        />
                        <input
                            type="text"
                            placeholder="Say something..."
                            value={this.state.text}
                            onChange={this.handleTextChange}
                        />
                        <input type="submit" value="Post" />
                    </form>
                );
            }
        });

        var CommentBox = React.createClass({
            getInitialState: function() {
                return {data: []};
            },
            componentDidMount: function() {
                $.ajax({
                    url: this.props.url,
                    dataType: 'json',
                    cache: false,
                    success: function(data) {
                        this.setState({data: data});
                    }.bind(this),
                    error: function(xhr, status, err) {
                        console.error(this.props.url, status, err.toString());
                    }.bind(this)
                });
            },
            render: function() {
                return (
                    <div className="commentBox">
                        <h1>CommentBox</h1>
                        <CommentList data={this.state.data} />
                        <CommentForm />
                    </div>
                );
            }
        });

        ReactDOM.render(
            <CommentBox url="admin/public/comments.json" interval={2000} />, 
            document.getElementById('content')
        );

    </script>
</body>
<script type="text/babel" src="admin/public/helloworld.js"></script>
</html>